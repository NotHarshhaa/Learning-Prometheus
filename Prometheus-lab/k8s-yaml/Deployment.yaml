apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment # Name of the deployment
  labels:
    app: api # Label for identifying the application type
spec:
  replicas: 3 # Ensures high availability by running 3 replicas
  strategy:
    type: RollingUpdate # Enables zero-downtime updates
    rollingUpdate:
      maxUnavailable: 1 # Only 1 pod can be unavailable during an update
      maxSurge: 1 # Allows 1 extra pod to be created during an update
  selector:
    matchLabels:
      app: api # Match labels to select pods for this deployment
  template:
    metadata:
      labels:
        app: api # Labels for pods created by this template
    spec:
      containers:
        - name: my-container # Name of the container
          image: panchanandevops/myexpress:v0.1.0 # Docker image for the container
          imagePullPolicy: Always # Ensures the latest image is pulled on every deployment
          resources:
            limits:
              memory: "256Mi" # Increased memory for better performance
              cpu: "500m" # CPU limit for the container
            requests:
              memory: "128Mi" # Requested memory for initial allocation
              cpu: "250m" # Requested CPU to ensure smooth operation
          ports:
            - containerPort: 3000 # Port on which the container will listen
          readinessProbe: # Ensures the pod is ready before traffic is sent
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe: # Checks if the application is still running
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 20
      restartPolicy: Always # Ensures the container restarts on failure
      nodeSelector:
        kubernetes.io/os: linux # Ensures the deployment runs on Linux nodes
